{"ast":null,"code":"var _jsxFileName = \"E:\\\\GoodReact\\\\myapp\\\\src\\\\components\\\\Textform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const ch = onClick => {\n    console.log(\"uppercase clixked\" + text);\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  };\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  };\n  const locase = () => {\n    let newtextt = text.toLowerCase();\n    setText(newtextt);\n  };\n  const Clear = () => {\n    let newtexttt = '';\n    setText(newtexttt);\n  };\n  const [mystyle, setStyle] = useState({\n    color: 'white',\n    backgroundColor: 'black'\n  });\n  const [btntext, setBtnText] = useState(\"\");\n  const toggle = () => {\n    if (mystyle.color == 'white') {\n      setStyle({\n        color: \"black\",\n        blackgroundColor: white\n      });\n      setBtnText(\"enable light color\");\n    } else {\n      setStyle({\n        color: black,\n        backgroundColor: white\n      });\n      setBtnText(\"enable dark mode\");\n    }\n  };\n  // const [text,setText] =useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: mystyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"my-2 mx-2\",\n          children: props.Hea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mx-2 my-2 text-white\",\n          onClick: ch,\n          children: \"Click for uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mx-2 my-2 text-dark\",\n          onClick: locase,\n          children: \"Click for lowercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary my-2 mx-2 text-dark\",\n          onClick: Clear,\n          children: \"Click for clear text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: speak,\n          className: \"btn btn-warning mx-2 my-2\",\n          children: \"Speak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onclick: toggle,\n          type: \"submit\",\n          className: \"btn btn-success\",\n          children: btntext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-bold\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-2 \",\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \"words read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Preview Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Textform, \"3h0D9EP7ZCTEQ3KVsFF1LOGiOg4=\");\n_c = Textform;\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Textform","props","_s","handleOnChange","event","setText","target","value","ch","onClick","console","log","text","newtext","toUpperCase","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","locase","newtextt","toLowerCase","Clear","newtexttt","mystyle","setStyle","color","backgroundColor","btntext","setBtnText","toggle","blackgroundColor","white","black","children","className","style","Hea","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onclick","type","split","length","_c","$RefreshReg$"],"sources":["E:/GoodReact/myapp/src/components/Textform.js"],"sourcesContent":["import React ,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\nconst handleOnChange  =(event) => {\r\n    setText(event.target.value);\r\n}\r\nconst ch  =(onClick) => {\r\n    console.log(\"uppercase clixked\" +text);\r\nlet newtext = text.toUpperCase();\r\nsetText(newtext);\r\n}\r\n\r\nconst speak = () => {\r\n  let msg = new SpeechSynthesisUtterance();\r\n  msg.text = text;\r\n  window.speechSynthesis.speak(msg);\r\n}\r\nconst locase =() =>{\r\n  let newtextt = text.toLowerCase();\r\n  setText(newtextt);\r\n}\r\nconst Clear =() =>{\r\n  let newtexttt = '';\r\n  setText(newtexttt);\r\n}\r\nconst [mystyle,setStyle] =useState({\r\ncolor:'white',\r\nbackgroundColor:'black',\r\n\r\n});\r\nconst [btntext,setBtnText] =useState(\"\");\r\nconst toggle =()=>{\r\n  if(mystyle.color == 'white'){\r\n    setStyle({\r\n      color:\"black\",blackgroundColor:white})\r\nsetBtnText(\"enable light color\");\r\n  }\r\n  else{\r\n    setStyle({color:black,backgroundColor:white});\r\n    setBtnText(\"enable dark mode\");\r\n  }\r\n}\r\n// const [text,setText] =useState('');\r\n  return (\r\n    <><div className='container' style ={mystyle}>\r\n    <div className=\"mb-3\">\r\n<h1 className='my-2 mx-2'>{props.Hea}</h1>\r\n<textarea className=\"form-control\" value ={text} onChange ={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n<button className =\"btn btn-success mx-2 my-2 text-white\" onClick ={ch}>Click for uppercase</button>\r\n<button className =\"btn btn-danger mx-2 my-2 text-dark\" onClick ={locase}>Click for lowercase</button>\r\n<button className =\"btn btn-primary my-2 mx-2 text-dark\" onClick ={Clear}>Click for clear text</button>\r\n<button onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\r\n<button onclick ={toggle} type =\"submit\" className =\"btn btn-success\">{btntext}</button>\r\n\r\n\r\n</div>\r\n</div>\r\n<div className =\"container text-bold\">\r\n  <h1 className =\"my-2 \">Text Summary</h1>\r\n<p>{text.split(\" \").length} words and {text.length} characters </p>\r\n<p>{0.008* text.split(\" \").length}words read</p>\r\n<h1>Preview Text</h1>\r\n<p>{text}</p>\r\n</div></>\r\n    \r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}