[{"E:\\GoodReact\\myapp\\src\\index.js":"1","E:\\GoodReact\\myapp\\src\\reportWebVitals.js":"2","E:\\GoodReact\\myapp\\src\\App.js":"3","E:\\GoodReact\\myapp\\src\\components\\Navbar.js":"4","E:\\GoodReact\\myapp\\src\\components\\Textform.js":"5","E:\\GoodReact\\myapp\\src\\components\\Alert.js":"6","E:\\GoodReact\\myapp\\src\\components\\About.js":"7"},{"size":535,"mtime":1688276572877,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1688276572992,"results":"10","hashOfConfig":"9"},{"size":1427,"mtime":1688772634719,"results":"11","hashOfConfig":"9"},{"size":1400,"mtime":1688772888425,"results":"12","hashOfConfig":"9"},{"size":1841,"mtime":1688573723584,"results":"13","hashOfConfig":"9"},{"size":434,"mtime":1688573310352,"results":"14","hashOfConfig":"9"},{"size":950,"mtime":1688459623853,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"bhp8k4",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\GoodReact\\myapp\\src\\index.js",[],[],[],"E:\\GoodReact\\myapp\\src\\reportWebVitals.js",[],[],"E:\\GoodReact\\myapp\\src\\App.js",["41"],[],"// import logo from './logo.svg';\nimport './App.css';\n import Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport React,{useState} from 'react';\n\n\nfunction App() {\n  const [alert,setAlert] =useState(null)\nconst ShowAlert = (message,type) =>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n  setTimeout( ()=>{\nsetAlert(null);\n  },3000\n\n  )\n}\n\n  const [mode,setMode] = useState('light')\n \n\n  //  setMode('light');\n  const toggle = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor =\"rgb(6 53 94)\";\n      ShowAlert(\"Dark mode has been enabled\",\"Success\");\n      document.title =\"Dark mode enabled\";\n      setInterval(()=>{\ndocument.title =\"Use TextUtils Now\";\n      },2000)\n      setInterval(()=>{\n        document.title = \"TextUtils is Amazing App\";\n              },1500)\n\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor =\"white\";\n      ShowAlert(\"Light mode has been enabled\",\"Success\");\n      document.title =\"Light mode enabled\";\n    }\n   \n  }\n  return (\n\n \n    <>\n\n   \n\n\n\n<Navbar mode ={mode} toggle ={toggle}/>\n<Alert alert ={alert}/>\n     \n      \n      {/* <div className=\"container my-3\"> */}\n        \n        <Textform ShowAlert ={ShowAlert} Hea =\"Write text\" mode ={mode}/>\n     \n\n\n\n\n\n\n  </>  \n   \n  )\n}\n\nexport default App;\n",[],"E:\\GoodReact\\myapp\\src\\components\\Navbar.js",["42","43","44"],[],"import React from 'react'\r\n import PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <><nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n   <div className=\"container-fluid\">\r\n     <a className=\"navbar-brand\" href=\"#\">myapp</a>\r\n     <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n       <span className=\"navbar-toggler-icon\"></span>\r\n     </button>\r\n     <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n       <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n         <li className=\"nav-item\">\r\n           <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n         </li>\r\n         <li className=\"nav-item\">\r\n           <a className=\"nav-link\" href=\"#\">MeAbout</a>\r\n         </li>\r\n         \r\n          \r\n       </ul>\r\n       <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onClick={props.toggle} checked/>\r\n  <label class=\"form-check-label\" for=\"flexSwitchCheckChecked\">Enable Button</label>\r\n</div>\r\n\r\n     </div>\r\n   </div>\r\n </nav>\r\n <div >hello</div></>\r\n    \r\n  )\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\GoodReact\\myapp\\src\\components\\Textform.js",[],[],"E:\\GoodReact\\myapp\\src\\components\\Alert.js",[],[],"E:\\GoodReact\\myapp\\src\\components\\About.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":2,"column":9,"nodeType":"47","messageId":"48","endLine":2,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":10,"column":6,"nodeType":"52","endLine":10,"endColumn":43},{"ruleId":"50","severity":1,"message":"51","line":20,"column":12,"nodeType":"52","endLine":20,"endColumn":45},"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]